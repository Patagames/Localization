<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="err0001" xml:space="preserve">
    <value>PointerManagerItem.Key is empty</value>
  </data>
  <data name="err0002" xml:space="preserve">
    <value>Unable to load library {0}</value>
  </data>
  <data name="err0003" xml:space="preserve">
    <value>File length cannot be less than zero</value>
  </data>
  <data name="err0004" xml:space="preserve">
    <value>Destination's name cannot be null or empty string</value>
  </data>
  <data name="err0005" xml:space="preserve">
    <value>Bookmark's title cannot be null or empty string</value>
  </data>
  <data name="err0006" xml:space="preserve">
    <value>Parametr index must be between {0} and {1}</value>
  </data>
  <data name="err0007" xml:space="preserve">
    <value>PdfForm object is not Initialized. Please load document whith this object as parameter</value>
  </data>
  <data name="err0008" xml:space="preserve">
    <value>This instance of the PdfForms class already assigned with another document</value>
  </data>
  <data name="err0009" xml:space="preserve">
    <value>Document is not yet available</value>
  </data>
  <data name="err0010" xml:space="preserve">
    <value>Forms is not yet available</value>
  </data>
  <data name="err0011" xml:space="preserve">
    <value>This page is not yet available</value>
  </data>
  <data name="TrialMsg" xml:space="preserve">
    <value>Trial version. Please visit http://patagames.com</value>
  </data>
  <data name="err0012" xml:space="preserve">
    <value>Unable to load DLL 'pdfium(.dll/.dylib)': The specified module could not be found.  Please make sure that you copy it to the application folder.  Alternatively, you can specify the full path to the pdfium(.dll/.dylib) file using specificPath parameter in the initialization method</value>
  </data>
  <data name="err0013" xml:space="preserve">
    <value>To set the document property instead of using LoadDocument method set the AllowSetDocument property to True. Please read the documentation before you do it.</value>
  </data>
  <data name="err0014" xml:space="preserve">
    <value>Document cannot be null</value>
  </data>
  <data name="err0015" xml:space="preserve">
    <value>Document not properly loaded</value>
  </data>
  <data name="err0016" xml:space="preserve">
    <value>Font name cannot be null or empty string</value>
  </data>
  <data name="err0017" xml:space="preserve">
    <value>The operation cannot be completed because the SDK is not initialized.  You have to call PdfCommon.Initialize() method before you can call any PDF processing functions.</value>
  </data>
  <data name="err0018" xml:space="preserve">
    <value>All instances of '{0}' class  should be disposed to prevent the memory leaks.</value>
  </data>
  <data name="TrialLoadDocument" xml:space="preserve">
    <value>With the trial version the documents which size is smaller than 1024 Kb, or greater than 10 Mb can be loaded without any restrictions. For other documents the allowed ranges is 1.5 - 2 Mb; 2.5 - 3 Mb; 3.5 - 4 Mb and so on.</value>
  </data>
  <data name="err0019" xml:space="preserve">
    <value>Unexpected error code.</value>
  </data>
  <data name="err0020" xml:space="preserve">
    <value>File not in PDF format or corrupted.</value>
  </data>
  <data name="err0021" xml:space="preserve">
    <value>File not found or could not be opened.</value>
  </data>
  <data name="err0022" xml:space="preserve">
    <value>Requested font not found.</value>
  </data>
  <data name="err0023" xml:space="preserve">
    <value>Image object is empty.</value>
  </data>
  <data name="err0024" xml:space="preserve">
    <value>Password required or incorrect password.</value>
  </data>
  <data name="err0025" xml:space="preserve">
    <value>The requested operation cannot be completed due to a license restrictions.</value>
  </data>
  <data name="err0026" xml:space="preserve">
    <value>Page not found or content error.</value>
  </data>
  <data name="err0027" xml:space="preserve">
    <value>Unknown error.</value>
  </data>
  <data name="err0028" xml:space="preserve">
    <value>Can't convert PdfBitmap into System.Drawing.Bitmap.</value>
  </data>
  <data name="err0029" xml:space="preserve">
    <value>Unsupported security scheme.</value>
  </data>
  <data name="errLicense1" xml:space="preserve">
    <value>The requested operation cannot be completed due to a license restrictions. You need to have at least a Developer Small Business License to be able  to complete this operation.</value>
  </data>
  <data name="errLicense2" xml:space="preserve">
    <value>The requested operation cannot be completed due to a license restrictions. You need to have at least a LITE License to be able  to complete this operation.</value>
  </data>
  <data name="errLicense3" xml:space="preserve">
    <value>The requested operation cannot be completed due to a license restrictions. You need to have a  full license to be able  to complete this operation.</value>
  </data>
  <data name="err0030" xml:space="preserve">
    <value>An element with the same key already exists in the Dictionary object.</value>
  </data>
  <data name="err0031" xml:space="preserve">
    <value>The given object is a part of list of indirect objects. Please use the Add(PdfTypeBase, PdfIndirectList) method to add this item.</value>
  </data>
  <data name="err0032" xml:space="preserve">
    <value>The given object is a part of list of indirect objects. Please use the Insert(int, PdfTypeBase, PdfIndirectList) method to insert this item.</value>
  </data>
  <data name="err0033" xml:space="preserve">
    <value>The given object is a part of list of indirect objects. Please use the SetAt(int, PdfTypeBase, PdfIndirectList) method instead.</value>
  </data>
  <data name="err0035" xml:space="preserve">
    <value>Can't find parent dictionary for given bookmark</value>
  </data>
  <data name="err0036" xml:space="preserve">
    <value>The annotations associated with given page  are invalid.</value>
  </data>
  <data name="err0037" xml:space="preserve">
    <value>Can't create indirect object</value>
  </data>
  <data name="err0038" xml:space="preserve">
    <value>Given annotation is invalid</value>
  </data>
  <data name="err0039" xml:space="preserve">
    <value>Unknown color format</value>
  </data>
  <data name="err0040" xml:space="preserve">
    <value>The given popup annotation is invalid</value>
  </data>
  <data name="err0041" xml:space="preserve">
    <value>Unknown type  of annotations relationship: {0}</value>
  </data>
  <data name="err0042" xml:space="preserve">
    <value>Unexpected type of the '{0}' entry.</value>
  </data>
  <data name="err0043" xml:space="preserve">
    <value>Non standard icon name. Please use ExtendedIconName property instead</value>
  </data>
  <data name="err0044" xml:space="preserve">
    <value>The specified entry not found. Entry name:{0}</value>
  </data>
  <data name="err0045" xml:space="preserve">
    <value>The '{0}' entry has unexpected value</value>
  </data>
  <data name="err0046" xml:space="preserve">
    <value>The CalloutLine array must be an array of 2 or 3 points.</value>
  </data>
  <data name="err0047" xml:space="preserve">
    <value>Valid value(s) for the {0} property {1}</value>
  </data>
  <data name="err0048" xml:space="preserve">
    <value>Given dictionary is not valid PdfTypeDictionary object</value>
  </data>
  <data name="err0049" xml:space="preserve">
    <value>The Maximum number of items has been exceeded</value>
  </data>
  <data name="err0050" xml:space="preserve">
    <value>Unexpected type of object. Expected: {0}; Actual: {1}</value>
  </data>
  <data name="err0051" xml:space="preserve">
    <value>Collection is read-only.</value>
  </data>
  <data name="err0052" xml:space="preserve">
    <value>Fatal runtime error.</value>
  </data>
  <data name="err0053" xml:space="preserve">
    <value>Fill Mode may be None, Alternate or Winding.</value>
  </data>
  <data name="err0054" xml:space="preserve">
    <value>The reference list has a non-zero length, however, a null pointer was returned.</value>
  </data>
  <data name="err0055" xml:space="preserve">
    <value>The 'Trapped' tag is not allowed here. Please use Document.Info instead.</value>
  </data>
  <data name="err0056" xml:space="preserve">
    <value>Your license key is out of date and cannot be used with this version of Pdfium.Net SDK. Please downgrade to the previous version allowed for using with this key.

Please note that you can use any versions which were released within 12 months from the date of purchase.

To use latest version of SDK, you must pass the renewed key obtained during renewal of maintenance subscription. If you have an active maintenance subscription, but you have not received the renewed key, please contact to support@patagames.com</value>
  </data>
  <data name="err0057" xml:space="preserve">
    <value>This method cannot accept newly created documents. If you pass such a document as an argument, the RequiredDataIsAbsentException will be thrown. To get the instance of the PdfDocument class that can be passed to the FromPdfDocument method, you must save the document to a temporary file or an array of bytes, and then open it with the PdfDocument.Load.</value>
  </data>
  <data name="err0058" xml:space="preserve">
    <value>Specific path is not supported on this platform</value>
  </data>
</root>